"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const units_1 = require("../types/units");
function getDefaultUnits() {
    const units = new Array();
    setDistanceUnits(units);
    setSpeedUnits(units);
    setTimeUnits(units);
    setTemperatureUnits(units);
    setMassUnits(units);
    setDigitalStorageUnits(units);
    return units;
}
exports.getDefaultUnits = getDefaultUnits;
function setDistanceUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['cm', 'centimeter', 'centimeters'],
            plural: 'Centimeters',
            ratio: 1,
            singular: 'Centimeter',
            type: 'cm',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['m', 'meter', 'meters'],
            plural: 'Meters',
            ratio: 100,
            singular: 'Meter',
            type: 'm',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['mm', 'millimeter', 'millimeters'],
            plural: 'Millimeters',
            ratio: 0.1,
            singular: 'Millimeter',
            type: 'mm',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['km', 'kilometer', 'kilometers'],
            plural: 'Kilometers',
            ratio: 100000,
            singular: 'Kilometer',
            type: 'km',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['inch', 'inches'],
            plural: 'Inches',
            ratio: 2.54,
            singular: 'Inch',
            type: 'inch',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['ft', 'feet', 'foot'],
            plural: 'Feet',
            ratio: 30.48,
            singular: 'Foot',
            type: 'foot/feet',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['yd', 'yard', 'yards'],
            plural: 'Yards',
            ratio: 91.44,
            singular: 'Yard',
            type: 'yard',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['mi', 'mile', 'miles'],
            plural: 'Miles',
            ratio: 160934.4,
            singular: 'Mile',
            type: 'mile',
        },
        {
            id: units_1.Unit.LENGTH_ID,
            phrases: ['nmi'],
            ratio: 185200,
            type: 'nautical mile (nmi)',
        },
    ]);
}
function setSpeedUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.SPEED_ID,
            phrases: ['kmh', 'kmph', 'khm', 'kph'],
            ratio: 1,
            type: 'km/h',
        },
        {
            id: units_1.Unit.SPEED_ID,
            phrases: ['mph'],
            ratio: 1.609344,
            type: 'miles/h',
        },
        {
            id: units_1.Unit.SPEED_ID,
            phrases: ['mps'],
            ratio: 3.6,
            type: 'm/s',
        },
        {
            id: units_1.Unit.SPEED_ID,
            phrases: ['fps'],
            ratio: 1.097,
            type: 'ft/s',
        },
        {
            id: units_1.Unit.SPEED_ID,
            phrases: ['kts', 'knots'],
            ratio: 1.852,
            type: 'kt',
        },
    ]);
}
function setTimeUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['nsec', 'nanosecond', 'nanoseconds'],
            plural: 'Nanoseconds',
            ratio: 1e-9,
            singular: 'Nanosecond',
            type: 'nsec',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['msec', 'microsecond', 'microseconds'],
            plural: 'Microseconds',
            ratio: 1e-6,
            singular: 'Microsecond',
            type: 'msec',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['ms', 'millisecond', 'milliseconds'],
            plural: 'Milliseconds',
            ratio: 1e-3,
            singular: 'Millisecond',
            type: 'ms',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['sec', 'second', 'seconds'],
            plural: 'Seconds',
            ratio: 1,
            singular: 'Second',
            type: 'second',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['minute', 'minutes'],
            plural: 'Minutes',
            ratio: 60,
            singular: 'Minute',
            type: 'minute',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['hr', 'hour', 'hours'],
            plural: 'Hours',
            ratio: 3600,
            singular: 'Hour',
            type: 'hour',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['day', 'days'],
            plural: 'Days',
            ratio: 86400,
            singular: 'Day',
            type: 'day',
        },
        {
            id: units_1.Unit.TIME_ID,
            phrases: ['week', 'weeks'],
            plural: 'Weeks',
            ratio: 604800,
            singular: 'Week',
            type: 'week',
        },
    ]);
}
function setTemperatureUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.TEMPERATURE_ID,
            phrases: ['K', 'kelvin'],
            ratio: 1,
            type: 'K',
        },
        {
            bias: '255.3722222222222',
            id: units_1.Unit.TEMPERATURE_ID,
            phrases: ['째F', 'F', 'fahrenheit'],
            ratio: '0.55555555555555555556',
            type: '째F',
        },
        {
            bias: 273.15,
            id: units_1.Unit.TEMPERATURE_ID,
            phrases: ['째C', 'C', 'celsius'],
            ratio: 1,
            type: '째C',
        },
    ]);
}
function setMassUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['gram', 'g', 'grams'],
            ratio: 1,
            type: 'gram',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['tonne', 'tonnes'],
            ratio: 1e6,
            type: 'tonne',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['kg', 'kilogram', 'kilograms'],
            ratio: 1000,
            type: 'kilogram',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['milligram', 'mg', 'milligrams'],
            ratio: 0.001,
            type: 'milligram',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['microgram', 'micrograms'],
            ratio: 1e-6,
            type: 'microgram',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['imperialton'],
            ratio: '1.016e+6',
            type: 'imperialton',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['uston'],
            ratio: '907185',
            type: 'uston',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['stone', 'stones'],
            ratio: '6350.29',
            type: 'stone',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['pound', 'pounds'],
            ratio: '453.592',
            type: 'pound',
        },
        {
            id: units_1.Unit.MASS_ID,
            phrases: ['ounce'],
            ratio: '28.3495',
            type: 'ounce',
        },
    ]);
}
function setDigitalStorageUnits(units) {
    units.push(...[
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['bit'],
            ratio: 1,
            type: 'bit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['kilobit', 'kB'],
            ratio: 1000,
            type: 'kilobit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['kibibit', 'kiB'],
            ratio: 1024,
            type: 'kibibit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['megabit', 'mB'],
            ratio: 1e6,
            type: 'megabit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['mebibit', 'miB'],
            ratio: '1.049e+6',
            type: 'mebibit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['gigabit', 'gB'],
            ratio: 1e9,
            type: 'gigabit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['gibibit', 'giB'],
            ratio: '1.074e+9',
            type: 'gibibit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['terabit', 'tB'],
            ratio: 1e12,
            type: 'terabit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['tebibit', 'tiB'],
            ratio: '1.1e+12',
            type: 'tebibit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['petabit', 'pB'],
            ratio: 1e15,
            type: 'petabit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['pebibit', 'piB'],
            ratio: '1.126e+15',
            type: 'pebibit',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['byte', 'b'],
            ratio: 8,
            type: 'byte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['kilobyte', 'kb'],
            ratio: 8000,
            type: 'kilobyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['kibibyte', 'kib'],
            ratio: 8192,
            type: 'kibibyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['megabyte', 'mb'],
            ratio: 8e6,
            type: 'megabyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['mebibyte', 'mib'],
            ratio: '8.389e+6',
            type: 'mebibyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['gigabyte', 'gb'],
            ratio: 8e9,
            type: 'gigabyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['gibibyte', 'gib'],
            ratio: '8.59e+9',
            type: 'gibibyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['terabyte', 'tb'],
            ratio: 8e12,
            type: 'terabyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['tebibyte', 'tib'],
            ratio: '8.796e+12',
            type: 'tebibyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['petabyte', 'pb'],
            ratio: 8e15,
            type: 'petabyte',
        },
        {
            id: units_1.Unit.DIGITAL_ID,
            phrases: ['pebibyte', 'pib'],
            ratio: '9.007e+15',
            type: 'pebibyte',
        },
    ]);
}

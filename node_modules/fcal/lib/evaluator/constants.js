"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const datatype_1 = require("../types/datatype");
const symboltable_1 = require("./symboltable");
class Constant {
    constructor(symbolTable) {
        this.values = new Map();
        this.symbolTable = symbolTable;
    }
    get(key) {
        return this.values.get(key);
    }
    /**
     * create or assign a constant with value
     * @param {string} key constants name
     * @param  {Type | Big.Decimal | number | string} value value
     */
    set(key, value) {
        this.symbolTable.set(key, symboltable_1.Entity.CONSTANT);
        if (value instanceof datatype_1.Type) {
            this.values.set(key, value);
            return;
        }
        this.values.set(key, datatype_1.Type.BNumber.New(value));
    }
    /**
     * import values from Object or map into constants
     * @param {Object | Map} values
     */
    use(values) {
        if (values instanceof Map) {
            values.forEach((value, key) => {
                this.set(key, value);
            });
            return;
        }
        for (const key in values) {
            if (values.hasOwnProperty(key)) {
                const element = values[key];
                this.set(key, element);
            }
        }
    }
}
exports.Constant = Constant;

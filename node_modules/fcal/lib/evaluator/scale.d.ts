import { Decimal } from 'decimal.js';
import { Type } from '../types/datatype';
import { EnvInputType } from './environment';
import { SymbolTable } from './symboltable';
/**
 * Scale is used to define scale of number literal
 */
declare class Scale {
    readonly symbolTable: SymbolTable;
    readonly values: Map<string, Type>;
    /**
     * Create scale register
     * @param symbolTable symbol table
     */
    constructor(symbolTable: SymbolTable);
    /**
     * Get the Scale value by its phrase
     * @param {string} key scale phrase or id
     * @returns {Type | undefined} scale value
     */
    get(key: string): Type | undefined;
    /**
     * create new scale
     * @param {string} key scale name
     * @param  {Type | Big.Decimal | number | string} value value
     */
    set(key: string, value: Type | Decimal | number | string): void;
    /**
     * import values from Object or map into scale
     * @param {Object | Map} values
     */
    use(values: EnvInputType): void;
}
export { Scale };

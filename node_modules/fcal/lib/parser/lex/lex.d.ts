import { Converter } from '../../evaluator/converter';
import { Scale } from '../../evaluator/scale';
import { Phrases } from '../../types/phrase';
import { Unit } from '../../types/units';
import { Token } from './token';
declare class Lexer {
    static notAlpha: string[];
    private static isDigit;
    private static isAlpha;
    private static isSpace;
    private static isBinaryDigit;
    private static isOctalDigit;
    private static isHexDigit;
    units: Unit.List;
    private tokens;
    private source;
    private start;
    private current;
    private phrases;
    private cc;
    private scale;
    constructor(source: string, phrases: Phrases, units: Unit.List, cc: Converter, scale: Scale);
    Next(): Token;
    getTokens(): Token[];
    private scan;
    private isAtEnd;
    private eat;
    private peek;
    private string;
    private number;
    private TT;
    private TTWithLiteral;
    private lexeme;
    private space;
    private previous;
}
export { Lexer };

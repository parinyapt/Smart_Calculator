import { Expr } from './expr';
declare class ASTPrinter implements Expr.IVisitor<string> {
    private static tab;
    private static prefixChar;
    private static createPrefix;
    private depth;
    constructor();
    visitTernaryExpr(expr: Expr.Ternary): string;
    visitCallExpr(expr: Expr.Call): string;
    visitAssignExpr(expr: Expr.Assign): string;
    visitVariableExpr(expr: Expr.Variable): string;
    visitUnitExpr(expr: Expr.UnitExpr): string;
    visitConversionExpr(expr: Expr.ConversionExpr): string;
    visitLogicalExpr(expr: Expr.Logical): string;
    visitBinaryExpr(expr: Expr.Binary): string;
    visitGroupingExpr(expr: Expr.Grouping): string;
    visitLiteralExpr(expr: Expr.Literal): string;
    visitUnaryExpr(expr: Expr.Unary): string;
    visitPercentageExpr(expr: Expr.Percentage): string;
    print(expr: Expr): string;
    private evaluate;
}
export { ASTPrinter };

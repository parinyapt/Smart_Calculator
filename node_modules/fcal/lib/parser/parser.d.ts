import { Converter } from '../evaluator/converter';
import { Scale } from '../evaluator/scale';
import { SymbolTable } from '../evaluator/symboltable';
import { Phrases } from '../types/phrase';
import { Unit } from '../types/units';
import { Expr } from './expr';
import { Token } from './lex/token';
declare class Parser {
    source: string;
    private lexer;
    private n;
    private tokens;
    private symbolTable;
    private c;
    private scale;
    constructor(source: string, phrases: Phrases, units: Unit.List, cc: Converter, scale: Scale, symbolTable: SymbolTable);
    parse(): Expr;
    getScannedTokens(): Token[];
    private Stmt;
    private expression;
    private assignment;
    private ternary;
    private logical;
    private equality;
    private comparison;
    private addition;
    private multiply;
    private unitConvert;
    private unary;
    private exponent;
    private suffix;
    private call;
    private term;
    private match;
    private consume;
    private check;
    private isAtEnd;
    private nextToken;
    private getToken;
    private previous;
    private peek;
    private incr;
}
export { Parser };
